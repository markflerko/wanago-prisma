generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String
  password  String
  addressId Int?      @unique
  posts     Post[]
  articles  Article[]
  address   Address?  @relation(fields: [addressId], references: [id])

  @@index([name], type: Hash)
}

model Article {
  id       Int     @id @default(autoincrement())
  title    String
  content  String?
  upvotes  Int     @default(0)
  author   User    @relation(fields: [authorId], references: [id])
  authorId Int
}

model Address {
  id      Int    @id @default(autoincrement())
  street  String
  city    String
  country String
  user    User?
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  deletedAt DateTime? @db.Timestamptz(6)
  posts     Post[]    @relation("CategoryToPost")
}

model Post {
  id            Int        @id @default(autoincrement())
  title         String
  authorId      Int
  createdAt     DateTime   @db.Timestamp(6)
  createdAtDate DateTime   @default(now()) @db.Date
  createdAtTime DateTime   @default(now()) @db.Time(6)
  scheduledDate DateTime?  @db.Timestamptz(6)
  updatedAt     DateTime?  @updatedAt @db.Timestamptz(6)
  paragraphs    String[]
  description   String?
  author        User       @relation(fields: [authorId], references: [id])
  categories    Category[] @relation("CategoryToPost")

  @@index([authorId])
  @@index([authorId, title])
}

model Product {
  id              Int               @id @default(autoincrement())
  name            String
  properties      Json?
  price           Int               @default(0)
  productPurchase ProductPurchase[]
}

model Client {
  id              Int               @id @default(autoincrement())
  name            String
  productPurchase ProductPurchase[]
}

model CarBrand {
  id       Int        @id @default(autoincrement())
  name     String
  CarModel CarModel[]
}

model CarModel {
  id              Int               @id @default(autoincrement())
  name            String
  brand           CarBrand          @relation(fields: [brandId], references: [id])
  brandId         Int
  productPurchase ProductPurchase[]
}

model ProductPurchase {
  id              Int      @id @default(autoincrement())
  client          Client   @relation(fields: [clientId], references: [id])
  clientId        Int
  product         Product  @relation(fields: [productId], references: [id])
  productId       Int
  courierCarModel CarModel @relation(fields: [courierCarId], references: [id])
  courierCarId    Int
}


model Book {
  id         Int     @id @default(autoincrement())
  title      String
  authorName String? @default("anonymous")
  author     Writer? @relation(fields: [authorName], references: [name], onDelete: SetDefault, onUpdate: SetDefault)
}
 
model Writer {
  name String @id
  books Book[]
}